// Copyright lowRISC contributors.
// Licensed under the Apache License, Version 2.0, see LICENSE for details.
// SPDX-License-Identifier: Apache-2.0
//
// Register Package auto-generated by `reggen` containing data structure

package test_ip_reg_pkg;

  // Param list
  parameter int REG_A = 1;
  parameter int REG_B = 1;
  parameter int RES = 1;

  ////////////////////////////
  // Typedefs for registers //
  ////////////////////////////
  typedef struct packed {
    logic [31:0] q;
  } test_ip_reg2hw_reg_a_mreg_t;

  typedef struct packed {
    logic [31:0] q;
  } test_ip_reg2hw_reg_b_mreg_t;


  typedef struct packed {
    logic [31:0] d;
    logic        de;
  } test_ip_hw2reg_reg_a_mreg_t;

  typedef struct packed {
    logic [31:0] d;
    logic        de;
  } test_ip_hw2reg_reg_b_mreg_t;

  typedef struct packed {
    logic [31:0] d;
  } test_ip_hw2reg_res_mreg_t;


  ///////////////////////////////////////
  // Register to internal design logic //
  ///////////////////////////////////////
  typedef struct packed {
    test_ip_reg2hw_reg_a_mreg_t [0:0] reg_a; // [64:33]
    test_ip_reg2hw_reg_b_mreg_t [0:0] reg_b; // [32:1]
  } test_ip_reg2hw_t;

  ///////////////////////////////////////
  // Internal design logic to register //
  ///////////////////////////////////////
  typedef struct packed {
    test_ip_hw2reg_reg_a_mreg_t [0:0] reg_a; // [98:66]
    test_ip_hw2reg_reg_b_mreg_t [0:0] reg_b; // [65:33]
    test_ip_hw2reg_res_mreg_t [0:0] res; // [32:1]
  } test_ip_hw2reg_t;

  // Register Address
  parameter logic [3:0] TEST_IP_REG_A_OFFSET = 4'h 0;
  parameter logic [3:0] TEST_IP_REG_B_OFFSET = 4'h 4;
  parameter logic [3:0] TEST_IP_RES_OFFSET = 4'h 8;


  // Register Index
  typedef enum int {
    TEST_IP_REG_A,
    TEST_IP_REG_B,
    TEST_IP_RES
  } test_ip_id_e;

  // Register width information to check illegal writes
  parameter logic [3:0] TEST_IP_PERMIT [3] = '{
    4'b 1111, // index[0] TEST_IP_REG_A
    4'b 1111, // index[1] TEST_IP_REG_B
    4'b 1111  // index[2] TEST_IP_RES
  };
endpackage

